name: Publish to PyPI

on:
  release:
    types: [published]

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Build Distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  test-package:
    name: Test Package Installation
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12', '3.13']
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Test wheel installation
      run: |
        pip install dist/*.whl
        linear --version
        linear --help
    
    - name: Test source installation
      run: |
        pip uninstall -y linear-cli
        pip install dist/*.tar.gz
        linear --version
        linear --help

  publish-to-pypi:
    name: Publish to PyPI
    needs: [build, test-package]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/linear-cli
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        # Using trusted publishing - no API token needed!
        # Just need to configure it in PyPI settings

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs: [build, test-package] 
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/linear-cli
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        # Using trusted publishing for TestPyPI too

  create-github-release-assets:
    name: Upload to GitHub Release
    needs: [build, test-package]
    runs-on: ubuntu-latest
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.whl
          dist/*.tar.gz
        generate_release_notes: false
