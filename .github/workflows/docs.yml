name: Documentation

on:
  push:
    branches: [ main ]
    paths: [ 'docs/**', 'src/**', 'README.md' ]
  pull_request:
    branches: [ main ]
    paths: [ 'docs/**', 'src/**', 'README.md' ]

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for version detection
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: docs-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            docs-${{ runner.os }}-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[docs]
          
      - name: Build HTML documentation
        run: |
          cd docs
          sphinx-build -W -b html . _build/html
          
      - name: Build PDF documentation
        run: |
          cd docs
          sudo apt-get update
          sudo apt-get install -y texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended
          sphinx-build -W -b latex . _build/latex
          cd _build/latex
          make all-pdf
          
      - name: Check documentation links
        run: |
          cd docs
          sphinx-build -W -b linkcheck . _build/linkcheck
          
      - name: Upload HTML documentation
        uses: actions/upload-artifact@v4
        with:
          name: docs-html
          path: docs/_build/html
          
      - name: Upload PDF documentation
        uses: actions/upload-artifact@v4
        with:
          name: docs-pdf
          path: docs/_build/latex/*.pdf

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: build-docs
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download documentation artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs-html
          path: ./docs
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4